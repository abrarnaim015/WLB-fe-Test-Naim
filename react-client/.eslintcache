[{"/home/naim/Documents/Hacktiv8/Phase_3/W2/MongoDb/react-client/src/index.js":"1","/home/naim/Documents/Hacktiv8/Phase_3/W2/MongoDb/react-client/src/reportWebVitals.js":"2","/home/naim/Documents/Hacktiv8/Phase_3/W2/MongoDb/react-client/src/App.js":"3","/home/naim/Documents/Hacktiv8/Phase_3/W2/MongoDb/react-client/src/store/index.js":"4","/home/naim/Documents/Hacktiv8/Phase_3/W2/MongoDb/react-client/src/config/graphql.js":"5","/home/naim/Documents/Hacktiv8/Phase_3/W2/MongoDb/react-client/src/page/Home-page.jsx":"6","/home/naim/Documents/Hacktiv8/Phase_3/W2/MongoDb/react-client/src/page/Movies-page.jsx":"7","/home/naim/Documents/Hacktiv8/Phase_3/W2/MongoDb/react-client/src/page/TvSeries-page.jsx":"8","/home/naim/Documents/Hacktiv8/Phase_3/W2/MongoDb/react-client/src/config/url.js":"9","/home/naim/Documents/Hacktiv8/Phase_3/W2/MongoDb/react-client/src/page/Add-Movie-page.jsx":"10","/home/naim/Documents/Hacktiv8/Phase_3/W2/MongoDb/react-client/src/page/favorites-page.jsx":"11","/home/naim/Documents/Hacktiv8/Phase_3/W2/MongoDb/react-client/src/config/gql/Movies-gql.js":"12","/home/naim/Documents/Hacktiv8/Phase_3/W2/MongoDb/react-client/src/config/gql/TvSeries-gql.js":"13","/home/naim/Documents/Hacktiv8/Phase_3/W2/MongoDb/react-client/src/page/Edit-Movie-page.jsx":"14","/home/naim/Documents/Hacktiv8/Phase_3/W2/MongoDb/react-client/src/style/animation/Home-page.js":"15","/home/naim/Documents/Hacktiv8/Phase_3/W2/MongoDb/react-client/src/style/animation/TvSeries-page.js":"16","/home/naim/Documents/Hacktiv8/Phase_3/W2/MongoDb/react-client/src/page/Add-TvSeries-page.jsx":"17","/home/naim/Documents/Hacktiv8/Phase_3/W2/MongoDb/react-client/src/page/favorites-TvSeries-page.jsx":"18","/home/naim/Documents/Hacktiv8/Phase_3/W2/MongoDb/react-client/src/page/Edit-TvSeries-page.jsx":"19"},{"size":659,"mtime":1607252648210,"results":"20","hashOfConfig":"21"},{"size":362,"mtime":1607189204358,"results":"22","hashOfConfig":"21"},{"size":1468,"mtime":1607496735545,"results":"23","hashOfConfig":"21"},{"size":408,"mtime":1607254858283,"results":"24","hashOfConfig":"21"},{"size":467,"mtime":1607495612979,"results":"25","hashOfConfig":"21"},{"size":1820,"mtime":1607517684129,"results":"26","hashOfConfig":"21"},{"size":6818,"mtime":1611153381826,"results":"27","hashOfConfig":"21"},{"size":6928,"mtime":1611153397638,"results":"28","hashOfConfig":"21"},{"size":118,"mtime":1607254559800,"results":"29","hashOfConfig":"21"},{"size":4398,"mtime":1611150676496,"results":"30","hashOfConfig":"21"},{"size":4140,"mtime":1611153281583,"results":"31","hashOfConfig":"21"},{"size":1175,"mtime":1607497652221,"results":"32","hashOfConfig":"21"},{"size":1197,"mtime":1607497654865,"results":"33","hashOfConfig":"21"},{"size":5466,"mtime":1611151198242,"results":"34","hashOfConfig":"21"},{"size":173,"mtime":1607437286346,"results":"35","hashOfConfig":"21"},{"size":173,"mtime":1607491320647,"results":"36","hashOfConfig":"21"},{"size":4368,"mtime":1611150778459,"results":"37","hashOfConfig":"21"},{"size":4321,"mtime":1611152828446,"results":"38","hashOfConfig":"21"},{"size":5545,"mtime":1611151373627,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"wr7x1e",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"42"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"42"},"/home/naim/Documents/Hacktiv8/Phase_3/W2/MongoDb/react-client/src/index.js",[],["88","89"],"/home/naim/Documents/Hacktiv8/Phase_3/W2/MongoDb/react-client/src/reportWebVitals.js",[],"/home/naim/Documents/Hacktiv8/Phase_3/W2/MongoDb/react-client/src/App.js",[],"/home/naim/Documents/Hacktiv8/Phase_3/W2/MongoDb/react-client/src/store/index.js",[],"/home/naim/Documents/Hacktiv8/Phase_3/W2/MongoDb/react-client/src/config/graphql.js",[],"/home/naim/Documents/Hacktiv8/Phase_3/W2/MongoDb/react-client/src/page/Home-page.jsx",[],"/home/naim/Documents/Hacktiv8/Phase_3/W2/MongoDb/react-client/src/page/Movies-page.jsx",["90","91","92"],"import { useHistory } from 'react-router-dom'\nimport { useQuery, useMutation } from '@apollo/client'\nimport { GET_MOVIE, DELETE_MOVIE, EDIT_MOVIE, GET_COLLECTIONS } from '../config/gql/Movies-gql'\nimport { openNav, closeNav } from '../style/animation/Home-page'\nimport React, { useEffect } from 'react'\nimport Swal from 'sweetalert2'\nimport client from '../config/graphql'\nimport '../style/css/Movie-Page.css'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport Tooltip from '@material-ui/core/Tooltip';\n\n\n\nfunction MoviesPage(props) {\n  const history = useHistory()\n  const { loading: loadingGetData, error: errorGetData, data: dataGetMovie, refetch } = useQuery(GET_MOVIE)\n  const [deleteMovieMu] = useMutation(DELETE_MOVIE)\n\n  const Toast = Swal.mixin({\n    toast: true,\n    position: 'top-end',\n    showConfirmButton: false,\n    timer: 3000,\n    timerProgressBar: true,\n    didOpen: (toast) => {\n      toast.addEventListener('mouseenter', Swal.stopTimer)\n      toast.addEventListener('mouseleave', Swal.resumeTimer)\n    }\n  })\n\n  useEffect(() => {\n    refetch()\n  }, [dataGetMovie, refetch])\n\n  if(loadingGetData) return (\n    <div className=\"container\">\n      <div className=\"text-center\" style={{ marginTop: '20%' }}>\n        <h1 className=\"titleMovie text-light\">Loading...</h1>\n        <CircularProgress color=\"secondary\" />\n      </div>\n    </div>\n  )\n\n  if(errorGetData) return (\n    <div className=\"container\">\n      <div className=\"text-center\" style={{marginTop: '250px'}}>\n        <h1>{errorGetData.message}</h1>\n      </div>\n    </div>\n  )\n\n  function handleChangePage(page) {\n    history.push(`/${page}`)\n  }\n\n  async function handleDeleteMovie(id) {\n    try {\n      await deleteMovieMu({\n        variables: {\n          id\n        }\n      })\n      Toast.fire({\n        icon: 'success',\n        title: 'Successfully'\n      })\n      refetch()\n    } catch (err) {\n      Toast.fire({\n        icon: 'error',\n        title: 'Opps Sorry, internal server Error'\n      })\n      console.log(err)\n    }\n  }\n\n  function handleDetail(dataDetail) {\n    Swal.fire({\n      imageUrl: dataDetail.poster_path,\n      imageHeight: 400,\n      imageAlt: dataDetail.title,\n      title: dataDetail.title,\n      text: `${dataDetail.overview}  ${dataDetail.tags}`\n    })\n  }\n\n  function cekDataFavorite(data1, data2) {\n    let falidate = false\n    data1.find(el => {\n      if(el.title === data2.title) {\n        falidate = true\n      }\n    })\n    return falidate\n  }\n\n  function handelFavorites(favoritesData) {\n    const { favorites } = client.readQuery({\n      query: GET_COLLECTIONS\n    })\n    \n    if(cekDataFavorite(favorites, favoritesData) === false) {\n      client.writeQuery({\n        query: GET_COLLECTIONS,\n        data: {\n          favorites: [ ...favorites,\n            {\n              _id: favoritesData._id,\n              title: favoritesData.title,\n              poster_path: favoritesData.poster_path\n            }\n          ]\n        }\n      })\n      Toast.fire({\n        icon: 'success',\n        title: 'Successfully'\n      })\n    } else {\n      Toast.fire({\n        icon: 'error',\n        title: 'Opps Sorry'\n      })\n    }\n  }\n\n  function handleEdit(dataEdit) {\n    client.writeQuery({\n      query: EDIT_MOVIE,\n      data: {\n        editMovie: [dataEdit]\n      }\n    })\n    history.push('/movies/edit')\n  }\n\n  return (\n    <div className=\"moviePage w3-animate-opacity\">\n      <div className=\"navbarApp\">\n        <div className=\"fixed-top\">\n          <Tooltip title=\"NavBar\" arrow>\n            <button className=\"btn btn-light ml-3 mt-3 px-4\" onClick={() => openNav()}>&#9776;</button>\n          </Tooltip>\n        </div>\n        <div id=\"myNav\" className=\"overlay\">\n          <a style={{ textDecoration: 'none' }} href=\"javascript:void(0)\" className=\"closebtn\" onClick={() => closeNav()}>&times;</a>\n          <div className=\"overlay-content\">\n            <p onClick={() => handleChangePage('')}>Home</p>\n            <p onClick={() => handleChangePage('movies/favorites')}>Favorites</p>\n            <p onClick={() => handleChangePage('tvseries')}>Tv Series</p>\n            <p onClick={() => handleChangePage('addmovie')}>Add Movie</p>\n          </div>\n        </div>\n      </div>\n      <div className=\"container\">\n        <div style={{ padding: '1px' }}>\n          <div style={{ backgroundColor: 'rgb(0, 0, 0, 0.6)', padding: '1px', borderRadius: '10px' }} className=\"text-center mt-5\">\n            <h1 className=\"titleMovie text-light m-3\">Movies</h1>\n          </div>\n        </div>\n        <div className=\"d-flex row mt-3 pl-5\">\n          { dataGetMovie.movies.map((movie) => (\n            <div className=\"col-4 mb-4 text-light\">\n              <div key={movie._id} className=\"card\" style={{width: '18em', backgroundColor: 'rgb(0, 0, 0, 0.6)'}}>\n                <img src={movie.poster_path} className=\"card-img-top\" alt={movie.title}/>\n                <div className=\"card-body\">\n                    <div className=\"d-flex justify-content-between\">\n                      <h5 className=\"card-title\">{movie.title}</h5>\n                      <h5 className=\"card-text w3-right-align\"> <img style={{ width: '15px' }} src={'https://www.flaticon.com/svg/static/icons/svg/1828/1828884.svg'} alt=\"Star\"/> {movie.popularity}</h5>\n                    </div>\n                    <div className=\"d-flex justify-content-between\">\n                      <Tooltip title=\"Delete Movie\" arrow>\n                        <button onClick={() => handleDeleteMovie(movie._id)} className=\"btn btn-outline-danger fa fa-hom\"><i className=\"fa fa-trash\"></i></button>\n                      </Tooltip>\n                      <Tooltip title=\"Edit Movie\" arrow>\n                        <button onClick={() => handleEdit(movie)} className=\"btn btn-outline-success fa fa-hom\"><i className=\"fa fa-refresh\"></i></button>\n                      </Tooltip>\n                      <Tooltip title=\"Add To Your Favorite Movie\" arrow>\n                        <button onClick={() => handelFavorites(movie)} className=\"btn btn-outline-warning fa fa-hom\"><i className=\"fa fa-truck\"></i></button>\n                      </Tooltip>\n                      <Tooltip title=\"Detail Movie\" arrow>\n                        <button onClick={() => handleDetail(movie)} className=\"btn btn-outline-info fa fa-hom\"><i className=\"fa fa-search\"></i></button>\n                      </Tooltip>\n                    </div>\n                </div>\n              </div>\n            </div>\n          )) }\n        </div>\n      </div>\n      <div>\n        <footer className=\"page-footer font-small mt-3\">\n        <div style={{ backgroundColor: 'rgb(0, 0, 0, 0.6)' }} className=\" footer-copyright text-center py-3 text-light\">\n          <p>© 2021 Copyright: Abrar Na'im</p>\n        </div>\n        </footer>\n      </div>\n    </div>\n  )\n}\n\nexport default MoviesPage","/home/naim/Documents/Hacktiv8/Phase_3/W2/MongoDb/react-client/src/page/TvSeries-page.jsx",["93","94","95"],"import { useHistory } from 'react-router-dom'\nimport { useQuery, useMutation } from '@apollo/client'\nimport { GET_TVSERIES, DELETE_TV_SERIES, GET_COLLECTION_TV_SERIES, EDIT_TV_SERIES } from '../config/gql/TvSeries-gql'\nimport { openNav, closeNav } from '../style/animation/TvSeries-page'\nimport React, { useEffect } from 'react'\nimport Swal from 'sweetalert2'\nimport client from '../config/graphql'\nimport '../style/css/TvSeries-page.css'\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nfunction TvSeriesPage(props) {\n  const history = useHistory()\n  const { loading: loadingGetData, error: errorGetData, data: dataGetTvSeries, refetch } = useQuery(GET_TVSERIES)\n  const [deleteTvSeriesMu] = useMutation(DELETE_TV_SERIES)\n\n  const Toast = Swal.mixin({\n    toast: true,\n    position: 'top-end',\n    showConfirmButton: false,\n    timer: 3000,\n    timerProgressBar: true,\n    didOpen: (toast) => {\n      toast.addEventListener('mouseenter', Swal.stopTimer)\n      toast.addEventListener('mouseleave', Swal.resumeTimer)\n    }\n  })\n\n  useEffect(() => {\n    refetch()\n  }, [dataGetTvSeries, refetch])\n\n  if(loadingGetData) return (\n    <div className=\"container\">\n      <div className=\"text-center\" style={{ marginTop: '20%' }}>\n        <h1 className=\"titleMovie text-light\">Loading...</h1>\n        <CircularProgress color=\"secondary\" />\n      </div>\n    </div>\n  )\n\n  if(errorGetData) return (\n    <div className=\"container\">\n      <div className=\"text-center\" style={{marginTop: '250px'}}>\n        <h1>{errorGetData.message}</h1>\n      </div>\n    </div>\n  )\n\n  function handleChangePage(page) {\n    history.push(`/${page}`)\n  }\n\n  async function handleDeleteTvSeries(id) {\n    try {\n      await deleteTvSeriesMu({\n        variables: {\n          id\n        }\n      })\n      Toast.fire({\n        icon: 'success',\n        title: 'Successfully'\n      })\n      refetch()\n    } catch (err) {\n      Toast.fire({\n        icon: 'error',\n        title: 'Opps Sorry, internal server Error'\n      })\n      console.log(err)\n    }\n  }\n\n  function handleEdit(dataEdit) {\n    client.writeQuery({\n      query: EDIT_TV_SERIES,\n      data: {\n        editTvSeries: [dataEdit]\n      }\n    })\n    history.push('/tvseries/edit')\n  }\n\n  function cekDataFavorite(data1, data2) {\n    let falidate = false\n    data1.find(el => {\n      if(el.title === data2.title) {\n        falidate = true\n      }\n    })\n    return falidate\n  }\n\n  function handelFavorites(dataFavorite) {\n    const { tvseriies } = client.readQuery({\n      query: GET_COLLECTION_TV_SERIES\n    })\n\n    if(cekDataFavorite(tvseriies, dataFavorite) === false) {\n      client.writeQuery({\n        query: GET_COLLECTION_TV_SERIES,\n        data: {\n          tvseriies: [ ...tvseriies,\n            {\n              _id: dataFavorite._id,\n              title: dataFavorite.title,\n              poster_path: dataFavorite.poster_path\n            }\n          ]\n        }\n      })\n      Toast.fire({\n        icon: 'success',\n        title: 'Successfully'\n      })\n    } else {\n      Toast.fire({\n        icon: 'error',\n        title: 'Opps Sorry'\n      })\n    }\n  }\n\n  function handleDetail(dataDetail) {\n    Swal.fire({\n      imageUrl: dataDetail.poster_path,\n      imageHeight: 400,\n      imageAlt: dataDetail.title,\n      title: dataDetail.title,\n      text: `${dataDetail.overview}  ${dataDetail.tags}`\n    })\n  }\n\n  return (\n    <div className=\"TvSeriesPage w3-animate-opacity\">\n      <div className=\"navbarApp\">\n        <div className=\"fixed-top\">\n          <Tooltip title=\"NavBar\" arrow>\n            <button className=\"btn btn-light ml-3 mt-3 px-4\" onClick={() => openNav()}>&#9776;</button>\n          </Tooltip>\n        </div>\n        <div id=\"myNav\" className=\"overlay\">\n          <a style={{ textDecoration: 'none' }} href=\"javascript:void(0)\" className=\"closebtn\" onClick={() => closeNav()}>&times;</a>\n          <div className=\"overlay-content\">\n            <p onClick={() => handleChangePage('')}>Home</p>\n            <p onClick={() => handleChangePage('movies')}>Movies</p>\n            <p onClick={() => handleChangePage('tvseries/favorites')}>Favorites</p>\n            <p onClick={() => handleChangePage('addtvseries')}>Add Tv Series</p>\n          </div>\n        </div>\n      </div>\n      <div className=\"container\">\n        <div style={{ padding: '1px' }}>\n          <div style={{ backgroundColor: 'rgb(0, 0, 0, 0.6)', padding: '1px', borderRadius: '10px' }} className=\"text-center mt-5\">\n            <h1 className=\"titleMovie text-light m-3\">Tv Series Page</h1>\n          </div>\n        </div>\n        <div className=\"d-flex row mt-3 pl-5\">\n          { dataGetTvSeries.series.map((serie) => (\n            <div className=\"col-4 mb-4 text-light\">\n              <div key={serie._id} className=\"card\" style={{width: '18em', backgroundColor: 'rgb(0, 0, 0, 0.6)'}}>\n                <img src={serie.poster_path} className=\"card-img-top\" alt={serie.title}/>\n                <div className=\"card-body\">\n                    <div className=\"d-flex justify-content-between\">\n                      <h5 className=\"card-title\">{serie.title}</h5>\n                      <h5 className=\"card-text w3-right-align\"> <img style={{ width: '15px' }} src={'https://www.flaticon.com/svg/static/icons/svg/1828/1828884.svg'} alt=\"Star\"/> {serie.popularity}</h5>\n                    </div>\n                    <div className=\"d-flex justify-content-between\">\n                      <Tooltip title=\"Delete Tv Series\" arrow>\n                        <button onClick={() => handleDeleteTvSeries(serie._id)} className=\"btn btn-outline-danger fa fa-hom\"><i className=\"fa fa-trash\"></i></button>\n                      </Tooltip>\n                      <Tooltip title=\"Edit Tv Series\" arrow>\n                        <button onClick={() => handleEdit(serie)} className=\"btn btn-outline-success fa fa-hom\"><i className=\"fa fa-refresh\"></i></button>\n                      </Tooltip>\n                      <Tooltip title=\"Add To Your Favorites Tv Series\" arrow>\n                        <button onClick={() => handelFavorites(serie)} className=\"btn btn-outline-warning fa fa-hom\"><i className=\"fa fa-truck\"></i></button>\n                      </Tooltip>\n                      <Tooltip title=\"Detail Tv Series\" arrow>\n                        <button onClick={() => handleDetail(serie)} className=\"btn btn-outline-info fa fa-hom\"><i className=\"fa fa-search\"></i></button>\n                      </Tooltip>\n                    </div>\n                </div>\n              </div>\n            </div>\n          )) }\n        </div>\n      </div>\n      <div>\n        <footer className=\"page-footer font-small mt-3\">\n        <div style={{ backgroundColor: 'rgb(0, 0, 0, 0.6)' }} className=\" footer-copyright text-center py-3 text-light\">\n          <p>© 2021 Copyright: Abrar Na'im</p>\n        </div>\n        </footer>\n      </div>\n    </div>\n  )\n}\n\nexport default TvSeriesPage","/home/naim/Documents/Hacktiv8/Phase_3/W2/MongoDb/react-client/src/config/url.js",[],"/home/naim/Documents/Hacktiv8/Phase_3/W2/MongoDb/react-client/src/page/Add-Movie-page.jsx",["96","97"],"import React, { useState } from 'react'\nimport { useMutation } from '@apollo/client'\nimport { useHistory } from 'react-router-dom'\nimport { ADD_MOVIE } from '../config/gql/Movies-gql'\nimport { openNav, closeNav } from '../style/animation/Home-page'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport Button from '@material-ui/core/Button'\nimport Swal from 'sweetalert2'\n\nfunction AddMoviePage() {\n  const history = useHistory()\n  const [AddMovieSubmit] = useMutation(ADD_MOVIE)\n  const[addMovie, setAddMovie] = useState({\n    title: '',\n    overview: '',\n    poster_path: '',\n    popularity: null,\n    tags: ['']\n  })\n\n  const Toast = Swal.mixin({\n    toast: true,\n    position: 'top-end',\n    showConfirmButton: false,\n    timer: 3000,\n    timerProgressBar: true,\n    didOpen: (toast) => {\n      toast.addEventListener('mouseenter', Swal.stopTimer)\n      toast.addEventListener('mouseleave', Swal.resumeTimer)\n    }\n  })\n\n  \n  function handleChangePage(page) {\n    history.push(`/${page}`)\n  }\n\n  function handelAddMovie(e) {\n    let key = e.target.name\n    let value = e.target.value\n    if(key === 'popularity') {\n      value = Number(value)\n    }\n    if(key === 'tags') {\n      value = [value]\n    }\n    setAddMovie({\n      ...addMovie,\n      [key]: value\n    })\n    \n  }\n\n  function handelAddMovieSubmit(e) {\n    e.preventDefault()\n    AddMovieSubmit({\n      variables: {\n        newMovie: addMovie\n      }\n    })\n    history.push('/movies')\n    Toast.fire({\n      icon: 'success',\n      title: 'Successfully'\n    })\n  }\n\n  return (\n    <div className=\"addPageApp  w3-animate-opacity\">\n      <div className=\"navbarApp\">\n        <div className=\"fixed-top\">\n          <Tooltip title=\"NavBar\" arrow>\n            <button className=\"btn btn-light ml-3 mt-3 px-4\" onClick={() => openNav()}>&#9776;</button>\n          </Tooltip>\n        </div>\n        <div id=\"myNav\" className=\"overlay\">\n          <a style={{ textDecoration: 'none' }} href=\"javascript:void(0)\" className=\"closebtn\" onClick={() => closeNav()}>&times;</a>\n          <div className=\"overlay-content\">\n            <p onClick={() => handleChangePage('')}>Home</p>\n            <p onClick={() => handleChangePage('movies')}>Movies</p>\n            <p onClick={() => handleChangePage('tvseries')}>Tv Series</p>\n            <p onClick={() => handleChangePage('movies/favorites')}>Favorites</p>\n          </div>\n        </div>\n      </div>\n      <div className=\"container\">\n        {/* <div className=\"mt-5  mb-2 p-3\" style={{ backgroundColor: 'rgb(0, 0, 0, 0.6)', borderRadius: '10px' }}> */}\n        <div className=\"mt-5  mb-2 p-3\">\n          <div className=\"text-center\">\n            <h1 className=\"text-light titleMovie\">Form Add Movie</h1>\n          </div>\n        </div>\n        <div className=\"text-center\" style={{ backgroundColor: 'rgb(0, 0, 0, 0.6)', borderRadius: '10px', padding: '10px', marginTop: '40px' }}>\n          <div className=\"d-flex row\">\n            <div className=\"col-5\">\n                <img style={{width: \"50%\"}} src={addMovie.poster_path} alt={addMovie.title}/>\n            </div>\n            <div className=\"col-7\">\n              <form onSubmit={(e) => handelAddMovieSubmit(e)} className=\"form text-center\">\n                <input value={addMovie.title} onChange={(e) => handelAddMovie(e)} className=\"form-control my-3\" type=\"text\" placeholder=\"Title\" name=\"title\"></input>\n                <input value={addMovie.overview} onChange={(e) => handelAddMovie(e)} className=\"form-control my-3\" type=\"text\" placeholder=\"Overview\" name=\"overview\"></input>\n                <input value={addMovie.poster_path} onChange={(e) => handelAddMovie(e)} className=\"form-control my-3\" type=\"text\" placeholder=\"Poster Path\" name=\"poster_path\"></input>\n                <input value={addMovie.Popularity} onChange={(e) => handelAddMovie(e)} className=\"form-control my-3\" type=\"number\" min=\"0\" max=\"100\" placeholder=\"Popularity\" name=\"popularity\"></input>\n                <input value={addMovie.tags} onChange={(e) => handelAddMovie(e)} className=\"form-control my-3\" type=\"text\" placeholder=\"Tags\" name=\"tags\"></input>\n                <Button type=\"submit\" variant=\"contained\" color=\"primary\">Submit</Button>\n                {/* <button type=\"submit\" className=\"btn btn-primary\">Submit</button> */}\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default AddMoviePage","/home/naim/Documents/Hacktiv8/Phase_3/W2/MongoDb/react-client/src/page/favorites-page.jsx",["98","99","100","101"],"import React, { useEffect, useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { GET_COLLECTIONS } from '../config/gql/Movies-gql'\nimport { openNav, closeNav } from '../style/animation/Home-page'\nimport client from '../config/graphql'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline'\n\nfunction FavoritePage(props) {\n  const history = useHistory()\n  const [dataCache, setDataCache] = useState([])\n\n  useEffect(() => {\n    const { favorites } = client.readQuery({\n      query: GET_COLLECTIONS,\n    })\n    setDataCache(favorites)\n  }, [])\n\n  function handleChangePage(page) {\n    history.push(`/${page}`)\n  }\n\n  if(dataCache.length === 0) {\n    return (\n      <div className=\"w3-animate-opacity\">\n        <div className=\"navbarApp\">\n          <div className=\"fixed-top\">\n            <Tooltip title=\"NavBar\" arrow>\n              <button className=\"btn btn-light ml-3 mt-3 px-4\" onClick={() => openNav()}>&#9776;</button>\n            </Tooltip>\n          </div>\n          <div id=\"myNav\" className=\"overlay\">\n            <a style={{ textDecoration: 'none' }} href=\"javascript:void(0)\" className=\"closebtn\" onClick={() => closeNav()}>&times;</a>\n            <div className=\"overlay-content\">\n              <p onClick={() => handleChangePage('')}>Home</p>\n              <p onClick={() => handleChangePage('movies')}>Movies</p>\n              <p onClick={() => handleChangePage('tvseries')}>Tv Series</p>\n              <p onClick={() => handleChangePage('addmovie')}>Add Movie</p>\n            </div>\n          </div>\n        </div>\n        <div className=\"container\">\n          <div style={{ padding: '10px', margin: '10px', borderRadius: '10px' }}>\n          </div>\n          <div style={{ marginTop: '20%', padding: '10px', borderRadius: '10px'}}>\n            <ErrorOutlineIcon style={{ marginLeft: '48%' }} fontSize=\"large\" color=\"error\" />\n            <h1 className=\"text-center titleMovie text-light\">Empty Favorites Data...</h1>\n          </div>\n        </div>\n      </div>\n    )\n  } else {\n    return (\n      <div className=\"w3-animate-opacity\">\n        <div className=\"navbarApp\">\n          <div className=\"fixed-top\">\n            <Tooltip title=\"NavBar\" arrow>\n              <button className=\"btn btn-light ml-3 mt-3 px-4\" onClick={() => openNav()}>&#9776;</button>\n            </Tooltip>\n          </div>\n          <div id=\"myNav\" className=\"overlay\">\n            <a href=\"javascript:void(0)\" className=\"closebtn\" onClick={() => closeNav()}>&times;</a>\n            <div className=\"overlay-content\">\n              <p onClick={() => handleChangePage('')}>Home</p>\n              <p onClick={() => handleChangePage('movies')}>Movies</p>\n              <p onClick={() => handleChangePage('tvseries')}>Tv Series</p>\n              <p onClick={() => handleChangePage('addmovie')}>Add Movie</p>\n            </div>\n          </div>\n        </div>\n        <div className=\"container\">\n          <div style={{ padding: '10px', margin: '10px', borderRadius: '10px' }}>\n            <div>\n              <h1 className=\"text-center titleMovie text-light my-3\">You'r Faforite Movies</h1>\n            </div>\n            <div style={{  backgroundColor: 'rgb(0, 0, 0, 0.6)' }} className=\"mt-5\">\n              <div>\n                <table className=\"table text-light text-center\">\n                  { dataCache.map((dataFav) => (\n                    <tr key={dataFav._id}>\n                      <th>\n                        <img style={{ height: '300px' }} src={dataFav.poster_path} alt={dataFav.title}/>\n                      </th>\n                      <th>\n                        <h3 style={{ marginTop: '20%' }}>{dataFav.title}</h3>\n                      </th>\n                      {/* <th>\n                        <button style={{ marginTop: '90%' }} className=\"btn btn-outline-danger fa fa-hom\"><i className=\"fa fa-trash\"></i></button>\n                      </th> */}\n                    </tr>\n                  ))}\n                </table>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n}\n\nexport default FavoritePage","/home/naim/Documents/Hacktiv8/Phase_3/W2/MongoDb/react-client/src/config/gql/Movies-gql.js",[],"/home/naim/Documents/Hacktiv8/Phase_3/W2/MongoDb/react-client/src/config/gql/TvSeries-gql.js",[],"/home/naim/Documents/Hacktiv8/Phase_3/W2/MongoDb/react-client/src/page/Edit-Movie-page.jsx",["102","103"],"import React, { useEffect, useState } from 'react'\nimport { useMutation } from '@apollo/client'\nimport { useHistory } from 'react-router-dom'\nimport { openNav, closeNav } from '../style/animation/Home-page'\nimport { EDIT_MOVIE, SAVE_EDIT_MOVIE } from '../config/gql/Movies-gql'\nimport client from '../config/graphql'\nimport Swal from 'sweetalert2'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport Button from '@material-ui/core/Button'\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\nfunction EditMoviePage(props) {\n  const history = useHistory()\n  const [saveDataEdit] = useMutation(SAVE_EDIT_MOVIE)\n  const[dataEdit, setDataEdit] = useState({\n    id: '',\n    title: '',\n    overview: '',\n    poster_path: '',\n    popularity: null,\n    tags: ['']\n  })\n\n  useEffect(() => {\n    const { editMovie } = client.readQuery({\n      query: EDIT_MOVIE,\n    })\n    setDataEdit({\n      id: editMovie[0]._id,\n      title: editMovie[0].title,\n      overview: editMovie[0].overview,\n      poster_path: editMovie[0].poster_path,\n      popularity: editMovie[0].popularity,\n      tags: editMovie[0].tags\n    })\n  }, [])\n\n  const Toast = Swal.mixin({\n    toast: true,\n    position: 'top-end',\n    showConfirmButton: false,\n    timer: 3000,\n    timerProgressBar: true,\n    didOpen: (toast) => {\n      toast.addEventListener('mouseenter', Swal.stopTimer)\n      toast.addEventListener('mouseleave', Swal.resumeTimer)\n    }\n  })\n\n  function handleChangePage(page) {\n    history.push(`/${page}`)\n  }\n\n  function handleEdit(e) {\n    let key = e.target.name\n    let value = e.target.value\n    if(key === 'popularity') {\n      value = Number(value)\n    }\n    setDataEdit({\n      ...dataEdit,\n      [key]: value\n    })\n  }\n\n  function handleEditSubmiit(e) {\n    e.preventDefault()\n    saveDataEdit({\n      variables: {\n        id: dataEdit.id,\n        title: dataEdit.title,\n        overview: dataEdit.overview,\n        poster_path: dataEdit.poster_path,\n        popularity: dataEdit.popularity,\n        tags: dataEdit.tags,\n      }\n    })\n    history.push('/movies')\n    Toast.fire({\n      icon: 'success',\n      title: 'Successfully'\n    })\n  }\n\n  if(dataEdit.length === 0) {\n    return (\n      <div className=\"container w3-animate-opacity\">\n        <div className=\"text-center\" style={{ marginTop: '20%' }}>\n          <h1 className=\"titleMovie text-light\">Loading...</h1>\n          <CircularProgress color=\"secondary\" />\n        </div>\n      </div>\n    )\n  } else {\n    return (\n      <div className=\"w3-animate-opacity\">\n        <div className=\"navbarApp\">\n          <div className=\"fixed-top\">\n            <Tooltip title=\"NavBar\" arrow>\n              <button className=\"btn btn-light ml-3 mt-3 px-4\" onClick={() => openNav()}>&#9776;</button>\n            </Tooltip>\n          </div>\n          <div id=\"myNav\" className=\"overlay\">\n            <a style={{ textDecoration: 'none' }} href=\"javascript:void(0)\" className=\"closebtn\" onClick={() => closeNav()}>&times;</a>\n            <div className=\"overlay-content\">\n              <p onClick={() => handleChangePage('')}>Home</p>\n              <p onClick={() => handleChangePage('movies')}>Movies</p>\n              <p onClick={() => handleChangePage('movies/favorites')}>Favorites</p>\n              <p onClick={() => handleChangePage('addmovie')}>Add Movie</p>\n            </div>\n          </div>\n        </div>\n        <div className=\"container\">\n          <div style={{ padding: '1px', borderRadius: '10px', margin: '10px' }}>\n            <div>\n              <h1 className=\"titleMovie text-center text-light m-3\">Edit Form</h1>\n            </div>\n          </div>\n          <div className=\"d-flex justify-content-center row text-center mt-3\">\n            <div className=\"col-5\">\n              <img style={{ width: '70%'}} src={dataEdit.poster_path} alt={dataEdit.title}/>\n            </div>\n            <div style={{ backgroundColor: 'rgb(0, 0, 0, 0.6)', borderRadius: '10px' }} className=\"col-7\">\n              <form className=\"form\" onSubmit={(e) => handleEditSubmiit(e)}>\n                <label className=\"col-form-label text-light\">Title Movie</label>\n                <input onChange={(e) => handleEdit(e)} type=\"text\" className=\"form-control\" value={dataEdit.title} name=\"title\"></input>\n                <label className=\"col-form-label text-light\">Overview Movie</label>\n                <input onChange={(e) => handleEdit(e)} type=\"text\" className=\"form-control\" value={dataEdit.overview} name=\"overview\"></input>\n                <label className=\"col-form-label text-light\">Poster Path Movie</label>\n                <input onChange={(e) => handleEdit(e)} type=\"text\" className=\"form-control\" value={dataEdit.poster_path} name=\"poster_path\"></input>\n                <label className=\"col-form-label text-light\">Popularity Movie</label>\n                <input onChange={(e) => handleEdit(e)} type=\"number\" className=\"form-control\" value={dataEdit.popularity} name=\"popularity\"></input>\n                <label className=\"col-form-label text-light\">Tags Movie</label>\n                <input onChange={(e) => handleEdit(e)} type=\"text\" className=\"form-control mb-3\" value={dataEdit.tags} name=\"tags\"></input>\n                <Button type=\"submit\" variant=\"contained\" color=\"primary\">Submit</Button>\n                {/* <button className=\"btn btn-info\" type=\"submit\">Submit</button> */}\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n}\n\nexport default EditMoviePage","/home/naim/Documents/Hacktiv8/Phase_3/W2/MongoDb/react-client/src/style/animation/Home-page.js",[],"/home/naim/Documents/Hacktiv8/Phase_3/W2/MongoDb/react-client/src/style/animation/TvSeries-page.js",[],["104","105"],"/home/naim/Documents/Hacktiv8/Phase_3/W2/MongoDb/react-client/src/page/Add-TvSeries-page.jsx",["106","107"],"import React, { useState } from 'react'\nimport { useMutation } from '@apollo/client'\nimport { useHistory } from 'react-router-dom'\nimport { ADD_TV_SERIES } from '../config/gql/TvSeries-gql'\nimport { openNav, closeNav } from '../style/animation/Home-page'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport Button from '@material-ui/core/Button'\nimport Swal from 'sweetalert2'\n\nfunction AddTvSeries() {\n  const history = useHistory()\n  const [AddTvSeriesSubmit] = useMutation(ADD_TV_SERIES)\n  const[addTvSeriues, setAddTvSeries] = useState({\n    title: '',\n    overview: '',\n    poster_path: '',\n    popularity: null,\n    tags: ['']\n  })\n\n  const Toast = Swal.mixin({\n    toast: true,\n    position: 'top-end',\n    showConfirmButton: false,\n    timer: 3000,\n    timerProgressBar: true,\n    didOpen: (toast) => {\n      toast.addEventListener('mouseenter', Swal.stopTimer)\n      toast.addEventListener('mouseleave', Swal.resumeTimer)\n    }\n  })\n\n  function handleChangePage(page) {\n    history.push(`/${page}`)\n  }\n\n  function handelAddTvSeries(e) {\n    let key = e.target.name\n    let value = e.target.value\n    if(key === 'popularity') {\n      value = Number(value)\n    }\n    if(key === 'tags') {\n      value = [value]\n    }\n    setAddTvSeries({\n      ...addTvSeriues,\n      [key]: value\n    })\n    \n  }\n\n  function handelAddTvSeriesSubmit(e) {\n    e.preventDefault()\n    AddTvSeriesSubmit({\n      variables: {\n        newTvSeries: addTvSeriues\n      }\n    })\n    history.push('/tvseries')\n    Toast.fire({\n      icon: 'success',\n      title: 'Successfully'\n    })\n  }\n\n  return (\n    <div className=\"addPageApp  w3-animate-opacity\">\n      <div className=\"navbarApp\">\n        <div className=\"fixed-top\">\n          <Tooltip title=\"NavBar\" arrow>\n            <button className=\"btn btn-light ml-3 mt-3 px-4\" onClick={() => openNav()}>&#9776;</button>\n          </Tooltip>\n        </div>\n        <div id=\"myNav\" className=\"overlay\">\n          <a style={{ textDecoration: 'none' }} href=\"javascript:void(0)\" className=\"closebtn\" onClick={() => closeNav()}>&times;</a>\n          <div className=\"overlay-content\">\n            <p onClick={() => handleChangePage('')}>Home</p>\n            <p onClick={() => handleChangePage('movies')}>Movies</p>\n            <p onClick={() => handleChangePage('tvseries')}>Tv Series</p>\n            <p onClick={() => handleChangePage('movies/favorites')}>Favorites</p>\n          </div>\n        </div>\n      </div>\n      <div className=\"container\">\n        <div className=\"mt-5  mb-2 p-3\">\n          <div className=\"text-center\">\n            <h1 className=\"text-light titleMovie\">Form Add Tv Series</h1>\n          </div>\n        </div>\n        <div className=\"text-center\" style={{ backgroundColor: 'rgb(0, 0, 0, 0.6)', borderRadius: '10px', padding: '10px', marginTop: '40px' }}>\n          <div className=\"d-flex row\">\n            <div className=\"col-5\">\n                <img style={{width: \"50%\"}} src={addTvSeriues.poster_path} alt={addTvSeriues.title}/>\n            </div>\n            <div className=\"col-7\">\n              <form onSubmit={(e) => handelAddTvSeriesSubmit(e)} className=\"form text-center\">\n                <input value={addTvSeriues.title} onChange={(e) => handelAddTvSeries(e)} className=\"form-control my-3\" type=\"text\" placeholder=\"Title\" name=\"title\"></input>\n                <input value={addTvSeriues.overview} onChange={(e) => handelAddTvSeries(e)} className=\"form-control my-3\" type=\"text\" placeholder=\"Overview\" name=\"overview\"></input>\n                <input value={addTvSeriues.poster_path} onChange={(e) => handelAddTvSeries(e)} className=\"form-control my-3\" type=\"text\" placeholder=\"Poster Path\" name=\"poster_path\"></input>\n                <input value={addTvSeriues.Popularity} onChange={(e) => handelAddTvSeries(e)} className=\"form-control my-3\" type=\"number\" min=\"0\" max=\"100\" placeholder=\"Popularity\" name=\"popularity\"></input>\n                <input value={addTvSeriues.tags} onChange={(e) => handelAddTvSeries(e)} className=\"form-control my-3\" type=\"text\" placeholder=\"Tags\" name=\"tags\"></input>\n                <Button type=\"submit\" variant=\"contained\" color=\"primary\">Submit</Button>\n                {/* <button type=\"submit\" className=\"btn btn-primary\">Submit</button> */}\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default AddTvSeries","/home/naim/Documents/Hacktiv8/Phase_3/W2/MongoDb/react-client/src/page/favorites-TvSeries-page.jsx",["108","109","110","111"],"import React, { useEffect, useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { GET_COLLECTION_TV_SERIES } from '../config/gql/TvSeries-gql'\nimport { openNav, closeNav } from '../style/animation/Home-page'\nimport client from '../config/graphql'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline'\n\nfunction FavoritePage(props) {\n  const history = useHistory()\n  const [dataCache, setDataCache] = useState([])\n\n  useEffect(() => {\n    const { tvseriies } = client.readQuery({\n      query: GET_COLLECTION_TV_SERIES,\n    })\n    setDataCache(tvseriies)\n  }, [])\n\n  function handleChangePage(page) {\n    history.push(`/${page}`)\n  }\n\n  if(dataCache.length === 0) {\n    return (\n      <div className=\"w3-animate-opacity\">\n        <div className=\"navbarApp\">\n          <div className=\"fixed-top\">\n            <Tooltip title=\"NavBar\" arrow>\n              <button className=\"btn btn-light ml-3 mt-3 px-4\" onClick={() => openNav()}>&#9776;</button>\n            </Tooltip>\n          </div>\n          <div id=\"myNav\" className=\"overlay\">\n            <a style={{ textDecoration: 'none' }} href=\"javascript:void(0)\" className=\"closebtn\" onClick={() => closeNav()}>&times;</a>\n            <div className=\"overlay-content\">\n              <p onClick={() => handleChangePage('')}>Home</p>\n              <p onClick={() => handleChangePage('movies')}>Movies</p>\n              <p onClick={() => handleChangePage('tvseries')}>Tv Series</p>\n              <p onClick={() => handleChangePage('addtvseries')}>Add Tv Series</p>\n            </div>\n          </div>\n        </div>\n        <div className=\"container\">\n          <div style={{ padding: '10px', margin: '10px', borderRadius: '10px' }}>\n            {/* <div>\n              <h1 className=\"text-center titleMovie text-light my-3\">You'r Faforite Tv Series</h1>\n            </div> */}\n          </div>\n          <div style={{ marginTop: '20%', padding: '10px', borderRadius: '10px'}}>\n            <ErrorOutlineIcon style={{ marginLeft: '48%' }} fontSize=\"large\" color=\"error\" />\n            <h1 className=\"text-center titleMovie text-light\">Empty Favorites Data...</h1>\n          </div>\n        </div>\n      </div>\n    )\n  } else {\n    return (\n      <div className=\"w3-animate-opacity\">\n        <div className=\"navbarApp\">\n          <div className=\"fixed-top\">\n            <Tooltip title=\"NavBar\" arrow>\n              <button className=\"btn btn-light ml-3 mt-3 px-4\" onClick={() => openNav()}>&#9776;</button>\n            </Tooltip>\n          </div>\n          <div id=\"myNav\" className=\"overlay\">\n            <a href=\"javascript:void(0)\" className=\"closebtn\" onClick={() => closeNav()}>&times;</a>\n            <div className=\"overlay-content\">\n              <p onClick={() => handleChangePage('')}>Home</p>\n              <p onClick={() => handleChangePage('movies')}>Movies</p>\n              <p onClick={() => handleChangePage('tvseries')}>Tv Series</p>\n              <p onClick={() => handleChangePage('addtvseries')}>Add Tv Series</p>\n            </div>\n          </div>\n        </div>\n        <div className=\"container\">\n          <div style={{ padding: '10px', margin: '10px', borderRadius: '10px' }}>\n            <div>\n              <h1 className=\"text-center titleMovie text-light my-3\">You'r Faforite Tv Series</h1>\n            </div>\n            <div  style={{ backgroundColor: 'rgb(0, 0, 0, 0.6)' }} className=\"mt-5\">\n              <div>\n                <table className=\"table text-light text-center\">\n                  { dataCache.map((dataFav) => (\n                    <tr key={dataFav._id}>\n                      <th>\n                        <img style={{ height: '300px' }} src={dataFav.poster_path} alt={dataFav.title}/>\n                      </th>\n                      <th>\n                        <h3 style={{ marginTop: '20%' }}>{dataFav.title}</h3>\n                      </th>\n                      {/* <th>\n                        <button style={{ marginTop: '90%' }} className=\"btn btn-outline-danger fa fa-hom\"><i className=\"fa fa-trash\"></i></button>\n                      </th> */}\n                    </tr>\n                  ))}\n                </table>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n}\n\nexport default FavoritePage","/home/naim/Documents/Hacktiv8/Phase_3/W2/MongoDb/react-client/src/page/Edit-TvSeries-page.jsx",["112","113"],"import React, { useEffect, useState } from 'react'\nimport { useMutation } from '@apollo/client'\nimport { useHistory } from 'react-router-dom'\nimport { openNav, closeNav } from '../style/animation/TvSeries-page'\nimport { EDIT_TV_SERIES, SAVE_EDIT_TV_SERIES } from '../config/gql/TvSeries-gql'\nimport client from '../config/graphql'\nimport Swal from 'sweetalert2'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport Button from '@material-ui/core/Button'\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\nfunction EditMoviePage(props) {\n  const history = useHistory()\n  const [saveDataEdit] = useMutation(SAVE_EDIT_TV_SERIES)\n  const[dataEdit, setDataEdit] = useState({\n    id: '',\n    title: '',\n    overview: '',\n    poster_path: '',\n    popularity: null,\n    tags: ['']\n  })\n\n  useEffect(() => {\n    const { editTvSeries } = client.readQuery({\n      query: EDIT_TV_SERIES,\n    })\n    setDataEdit({\n      id: editTvSeries[0]._id,\n      title: editTvSeries[0].title,\n      overview: editTvSeries[0].overview,\n      poster_path: editTvSeries[0].poster_path,\n      popularity: editTvSeries[0].popularity,\n      tags: editTvSeries[0].tags\n    })\n  }, [])\n\n  const Toast = Swal.mixin({\n    toast: true,\n    position: 'top-end',\n    showConfirmButton: false,\n    timer: 3000,\n    timerProgressBar: true,\n    didOpen: (toast) => {\n      toast.addEventListener('mouseenter', Swal.stopTimer)\n      toast.addEventListener('mouseleave', Swal.resumeTimer)\n    }\n  })\n\n  function handleChangePage(page) {\n    history.push(`/${page}`)\n  }\n\n  function handleEdit(e) {\n    let key = e.target.name\n    let value = e.target.value\n    if(key === 'popularity') {\n      value = Number(value)\n    }\n    setDataEdit({\n      ...dataEdit,\n      [key]: value\n    })\n  }\n\n  function handleEditSubmiit(e) {\n    e.preventDefault()\n    saveDataEdit({\n      variables: {\n        id: dataEdit.id,\n        title: dataEdit.title,\n        overview: dataEdit.overview,\n        poster_path: dataEdit.poster_path,\n        popularity: dataEdit.popularity,\n        tags: dataEdit.tags,\n      }\n    })\n    history.push('/tvseries')\n    Toast.fire({\n      icon: 'success',\n      title: 'Successfully'\n    })\n  }\n\n  if(dataEdit.length === 0) {\n    return (\n      <div className=\"container w3-animate-opacity\">\n        <div className=\"text-center\" style={{ marginTop: '20%' }}>\n          <h1 className=\"titleMovie text-light\">Loading...</h1>\n          <CircularProgress color=\"secondary\" />\n        </div>\n      </div>\n    )\n  } else {\n    return (\n      <div className=\"w3-animate-opacity\">\n        <div className=\"navbarApp\">\n          <div className=\"fixed-top\">\n            <Tooltip title=\"NavBar\" arrow>\n              <button className=\"btn btn-light ml-3 mt-3 px-4\" onClick={() => openNav()}>&#9776;</button>\n            </Tooltip>\n          </div>\n          <div id=\"myNav\" className=\"overlay\">\n            <a style={{ textDecoration: 'none' }} href=\"javascript:void(0)\" className=\"closebtn\" onClick={() => closeNav()}>&times;</a>\n            <div className=\"overlay-content\">\n              <p onClick={() => handleChangePage('')}>Home</p>\n              <p onClick={() => handleChangePage('tvseries/favorites')}>Favorites</p>\n              <p onClick={() => handleChangePage('tvseries')}>Tv Series</p>\n              <p onClick={() => handleChangePage('addtvseries')}>Add Tv Series</p>\n            </div>\n          </div>\n        </div>\n        <div className=\"container\">\n          <div style={{ padding: '1px', borderRadius: '10px', margin: '10px' }}>\n            <div>\n              <h1 className=\"titleMovie text-center text-light m-3\">Edit Form</h1>\n            </div>\n          </div>\n          <div className=\"d-flex justify-content-center row text-center mt-3\">\n            <div className=\"col-5\">\n              <img style={{ width: '70%'}} src={dataEdit.poster_path} alt={dataEdit.title}/>\n            </div>\n            <div style={{ backgroundColor: 'rgb(0, 0, 0, 0.6)', borderRadius: '10px' }} className=\"col-7\">\n              <form className=\"form\" onSubmit={(e) => handleEditSubmiit(e)}>\n                <label className=\"col-form-label text-light\">Title Tv Series</label>\n                <input onChange={(e) => handleEdit(e)} type=\"text\" className=\"form-control\" value={dataEdit.title} name=\"title\"></input>\n                <label className=\"col-form-label text-light\">Overview Tv Series</label>\n                <input onChange={(e) => handleEdit(e)} type=\"text\" className=\"form-control\" value={dataEdit.overview} name=\"overview\"></input>\n                <label className=\"col-form-label text-light\">Poster Path Tv Series</label>\n                <input onChange={(e) => handleEdit(e)} type=\"text\" className=\"form-control\" value={dataEdit.poster_path} name=\"poster_path\"></input>\n                <label className=\"col-form-label text-light\">Popularity Tv Series</label>\n                <input onChange={(e) => handleEdit(e)} type=\"number\" className=\"form-control\" value={dataEdit.popularity} name=\"popularity\"></input>\n                <label className=\"col-form-label text-light\">Tags Tv Series</label>\n                <input onChange={(e) => handleEdit(e)} type=\"text\" className=\"form-control mb-3\" value={dataEdit.tags} name=\"tags\"></input>\n                <Button type=\"submit\" variant=\"contained\" color=\"primary\">Submit</Button>\n                {/* <button className=\"btn btn-info\" type=\"submit\">Submit</button> */}\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n}\n\nexport default EditMoviePage",{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","severity":1,"message":"119","line":89,"column":19,"nodeType":"120","messageId":"121","endLine":89,"endColumn":21},{"ruleId":"122","severity":1,"message":"123","line":146,"column":11,"nodeType":"124","endLine":146,"endColumn":123},{"ruleId":"125","severity":1,"message":"126","line":146,"column":54,"nodeType":"127","messageId":"128","endLine":146,"endColumn":74},{"ruleId":"118","severity":1,"message":"119","line":87,"column":19,"nodeType":"120","messageId":"121","endLine":87,"endColumn":21},{"ruleId":"122","severity":1,"message":"123","line":144,"column":11,"nodeType":"124","endLine":144,"endColumn":123},{"ruleId":"125","severity":1,"message":"126","line":144,"column":54,"nodeType":"127","messageId":"128","endLine":144,"endColumn":74},{"ruleId":"122","severity":1,"message":"123","line":77,"column":11,"nodeType":"124","endLine":77,"endColumn":123},{"ruleId":"125","severity":1,"message":"126","line":77,"column":54,"nodeType":"127","messageId":"128","endLine":77,"endColumn":74},{"ruleId":"122","severity":1,"message":"123","line":34,"column":13,"nodeType":"124","endLine":34,"endColumn":125},{"ruleId":"125","severity":1,"message":"126","line":34,"column":56,"nodeType":"127","messageId":"128","endLine":34,"endColumn":76},{"ruleId":"122","severity":1,"message":"123","line":63,"column":13,"nodeType":"124","endLine":63,"endColumn":90},{"ruleId":"125","severity":1,"message":"126","line":63,"column":21,"nodeType":"127","messageId":"128","endLine":63,"endColumn":41},{"ruleId":"122","severity":1,"message":"123","line":104,"column":13,"nodeType":"124","endLine":104,"endColumn":125},{"ruleId":"125","severity":1,"message":"126","line":104,"column":56,"nodeType":"127","messageId":"128","endLine":104,"endColumn":76},{"ruleId":"114","replacedBy":"129"},{"ruleId":"116","replacedBy":"130"},{"ruleId":"122","severity":1,"message":"123","line":76,"column":11,"nodeType":"124","endLine":76,"endColumn":123},{"ruleId":"125","severity":1,"message":"126","line":76,"column":54,"nodeType":"127","messageId":"128","endLine":76,"endColumn":74},{"ruleId":"122","severity":1,"message":"123","line":34,"column":13,"nodeType":"124","endLine":34,"endColumn":125},{"ruleId":"125","severity":1,"message":"126","line":34,"column":56,"nodeType":"127","messageId":"128","endLine":34,"endColumn":76},{"ruleId":"122","severity":1,"message":"123","line":66,"column":13,"nodeType":"124","endLine":66,"endColumn":90},{"ruleId":"125","severity":1,"message":"126","line":66,"column":21,"nodeType":"127","messageId":"128","endLine":66,"endColumn":41},{"ruleId":"122","severity":1,"message":"123","line":104,"column":13,"nodeType":"124","endLine":104,"endColumn":125},{"ruleId":"125","severity":1,"message":"126","line":104,"column":56,"nodeType":"127","messageId":"128","endLine":104,"endColumn":76},"no-native-reassign",["131"],"no-negated-in-lhs",["132"],"array-callback-return","Array.prototype.find() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-script-url","Script URL is a form of eval.","Literal","unexpectedScriptURL",["131"],["132"],"no-global-assign","no-unsafe-negation"]